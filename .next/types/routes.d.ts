// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/cart" | "/checkout" | "/contact" | "/disclaimer" | "/privacy" | "/products" | "/products/[id]" | "/refund-policy" | "/shipping" | "/shipping-policy" | "/terms"
type AppRouteHandlerRoutes = "/api/products"
type PageRoutes = "/About" | "/Cart" | "/Checkout" | "/Contact" | "/Disclaimer" | "/Index" | "/NotFound" | "/Privacy" | "/ProductDetail" | "/Products" | "/ProductsNew" | "/RefundPolicy" | "/Shipping" | "/ShippingPolicy" | "/Terms"
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/About": {}
  "/api/products": {}
  "/cart": {}
  "/Cart": {}
  "/checkout": {}
  "/Checkout": {}
  "/contact": {}
  "/Contact": {}
  "/disclaimer": {}
  "/Disclaimer": {}
  "/Index": {}
  "/NotFound": {}
  "/privacy": {}
  "/Privacy": {}
  "/ProductDetail": {}
  "/products": {}
  "/Products": {}
  "/products/[id]": { "id": string; }
  "/ProductsNew": {}
  "/refund-policy": {}
  "/RefundPolicy": {}
  "/shipping": {}
  "/Shipping": {}
  "/shipping-policy": {}
  "/ShippingPolicy": {}
  "/terms": {}
  "/Terms": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
